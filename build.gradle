buildscript {
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.board.test'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')//스프링 부트용 Spring Data Jpa 추상화 라이브러리
    implementation('com.h2database:h2')//인메모리 관계형 데이터베이스(테스트 용도)
    implementation('org.springframework.boot:spring-boot-starter-mustache')

    implementation "com.querydsl:querydsl-jpa"
    implementation "com.querydsl:querydsl-core"
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.persistence:jakarta.persistence-api:2.2.3"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api:1.3.5"

    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file("$projectDir/build/generated")
}

test {
    useJUnitPlatform()
}